
%!encoding:       utf-8
%!options(html):  --css-sugar -o help.html
%!style(html):    ../styles.css
%!preproc(html):  '%%html: ' ''
%!postproc(html): '<HEAD>'  '<HEAD>\n<TITLE>joten @ AutoHotkey</TITLE>'
%!postproc(html): '<HEAD>'  '<HEAD>\n<LINK REL="icon" HREF="../images/jn.ico" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="author" CONTENT="joten" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="keywords" CONTENT="AutoHotkey, joten, owl-u, feed reader, atom, rss, rdf" />'
%!postproc(html): '<HEAD>'  '<HEAD>\n<META NAME="description" CONTENT="AutoHotkey scripts by joten" />'
%!postproc(html): '<H1>'    '<H1 ID="owlu">'
%!postproc(html): '">http://www.autohotkey.com/' '" TARGET="_blank">http://www.autohotkey.com/'
%!postproc(html): '\(c\)'   '&copy;'
%!options(txt):   -o help.txt
%!preproc(txt):   '%%txt: ' ''
%!postproc(txt):  '<BR>'    ''

=owl-u/help=
------------------------------------------------------------------------

owl-u is a feed reader for Microsoft Windows.''<BR>''
A feed reader aggregates web content like news headlines, blogs,
podcasts and vlogs from multiple web sites, displays the content in a
single interface, and with it simplifies the regular checking of web
sites for updates.

owl-u supports the following feed types:
- Atom
- RSS
- RDF


and single web sites. Additionally it can call an email client
(Sylpheed) to check for new emails.

It uses a single view interface, which displays only one of the
following at a time
- a quick help with all supported hotkeys
- a list of the configured feeds
- a list of all entries of the selected feed
- a summary for the selected entry
- the article referred to by the selected entry either as a full
  (the original) or a reduced (e. g. text only) version.


It is completely controlled by keyboard.''<BR>''
There is a title bar at the top of the window, which displays one of the
following depending on the selected view
- feed list view:
  - total number of feeds
  - number of unread entries of all feeds
  - number of etries of all feeds
- entry list view:
  - total number of entries
  - number of unread entries
  - feed title
- summary and article view:
  - feed title
  - item number of the selected entry
  - total number of entries in the feed
  - entry title


Additionally there is a status bar at the bottom of the window, which
indicates ongoing actions.

Keeping owl-u open in the background and periodically auto-reloading all
feeds is possible by setting configuration variables and using the
system tray icon, which supports actions for hiding and showing the main
window, manually reloading all feeds and quitting owl-u.


==Preliminary note==

There are two forms in which you can use owl-u:
+ the compiled executable
+ the AutoHotkey script


Depending on which form you choose, the following procedures
(installing, running and customizing) are different. Using the compiled
executable may be easier but is also less flexible for customization.


==Installing and running owl-u==

There is no installation wizard for owl-u. If you downloaded this
package and unpacked it, it should be in a directory, where you have
read and write access. This is the only requirement for using owl-u
(writing the configuration file and cache files). Apart from that you
may copy owl-u to any directory.
+ If you choose to use the executable and want to save it to a directory,
  to which you do not have write access with the same user account, with
  which you want to start owl-u, you will have to run owl-u through a
  link, with which you set the file path to the working directory.
+ If you choose to use the AutoHotkey script, you will need a version of
  AutoHotkey_L (not AutoHotkey Basic, available from
  http://www.autohotkey.com/download) and a file association for
  AutoHotkey scripts to the AutoHotkey executable (*.ahk -> <file path to
  AutoHotkey.exe>). You will than have to run "Main.ahk" from within the
  "source" directory of owl-u.


==Customization==

Customization can be done
- with configuration variables for
  - the appearance of owl-u (font, colour and size)
  - auto-reloading of feeds
  - feeds (i. a. source, title and processing)
- for hotkeys (the key bindings for the owl-u functions)


%%html: ''<P></P>''
+ If you use the executable, you first need to create a configuration
  file by using the hotkey "CTRL+W" or "I" for importing a feed list in
  OPML format. The file is saved in the working directory you specified
  in the link properties, or in the same directory where the executable
  is saved. You may than edit the file with a text editor, e. g. by using
  the hotkey "CTRL+E" (line format: <variable>=<value>, use no quotation
  marks, 1 for true and 0 for false), e. g. "Config_autoReload=0". You
  will have to quit and run owl-u again for the changes to take effect.
  The available configuration variables are listed below.
+ If you use the AutoHotkey script you can directly edit the file
  "Config.ahk" in the "source" directory of owl-u and reload the script
  with the hotkey "CTRL+R". You can additionally use the configuration
  file as described above. Please refer to the documentation of AutoHotkey
  for more information about writing an AutoHotkey script, especially
  - http://www.autohotkey.com/docs/Hotkeys.htm
  - http://www.autohotkey.com/docs/Variables.htm


===Configuration variables===

: **Config_autoReload**=0
  If true (=1), the feeds are automatically reloaded on start-up.

: **Config_browser**=C:\Program Files\Internet Explorer\iexplore.exe
  The browser, which is used, when opening an article or a link list.

: **Config_fontName**=Lucida Console
  The font type, which is used for all text (title and status bar,
  lists, summaries and articles in text mode).

: **Config_fontSize**=8
  The font size, which is used for all text (title and status bar,
  lists, summaries and articles in text mode).

: **Config_maxItems**=100
  The maximum number of items in the entry list (older entries are
  deleted, when reloading the feed).

: **Config_muaCommand**=
  The filepath to the executable of an email client, i. e. Sylpheed
  (other email clients are not supported).

: **Config_reloadTime**=0
  The time in milliseconds after which all feeds are reloaded
  automatically, if "Config_autoReload" above is set to true (=1); 0
  means no reload.

: **Config_windowHeight**=600
  The initial window height of owl-u.

: **Config_windowWidth**=800
  The initial window width of owl-u.


Configuring a feed is done without indexing and counting the number of
feeds yourself (beginning with version 0.1.0). For this to work you need
to start with the variable "Config_feed_xmlUrl", which increases the
index.

: **Config_feed_xmlUrl**=''http://www.autohotkey.com/forum/rss.php''
  The Url, from which to download the feed. It is also used for
  calculating cache ids.

: **Config_feed_title**=AutoHotkey Community
  The title of the feed, which is displayed in the feed list and title
  bar.

: **Config_feed_htmlUrl**=''http://www.autohotkey.com/forum/''
  The URL, which is used, when referencing an article or opening the web
  site of the feed.

: **Config_feed_cacheId**=www_autohotkey_com_forum_rss_php
  The identifier for the locally cached XML file of the feed.

: **Config_feed_htmlSource**=
  Depending on the value of this variable, the original HTML source is
  filtered and the resulting HTML source is displayed as the article.
  There are four possible values (use without the quotation marks):
  - "" (unaltered, original HTML source)
  - "regex" (applying the regular expressions)
  - "body" (cutting the body from the original source and applying the
    regular expressions)
  - "text" (like "body" with all tags not containing text deleted)

: **Config_feed_singleEntry**=0
  If false (=0), the XML file given by "Config_feed_xmlUrl" is parsed as
  a feed with a list of entries. If true (=1), the XML file is processed
  by the regular expressions (if there are any) and compared against the
  last saved entry of the feed; if different, a new entry is created.
  With this you can check web sites for changes, which do not provide a
  feed.

: **Config_feed_singleReloadOnly**=1
  If false (=0), the feed is reloaded, when all feeds are reloaded, e. g.
  by pressing the hotkey "SHIFT+R".


Configuring regular expressions and replacements works as cofiguring the
feeds itself; indexing and counting is done automatically, but you need
to start with "Config_feed_needleRegEx", which increases the index for
the regular expressions in use.

: **Config_feed_needleRegEx**=
  A regular expression, for which to search in the article (HTML) file.
  With this you can filter the article text for the relevant part.

: **Config_feed_replacement**=
  A regular expression for replacing the text matching the above needle
  regular expression.

: **Config_hotkey**=<key name>::<command or function name>
  You may overwrite default or add new hotkeys by using the above format.
  "<key name>::<command or function name>" is the original syntax from
  AutoHotkey as described in http://www.autohotkey.com/docs/Hotkeys.htm.
  - To deacivate a default hotkey, add a new line in the format
    "Config_hotkey=<key name>::" (without a function name).
  - To assign an internal function of owl-u to a new hotkey, add a line
    as documented below in the section "Hotkeys", but with the new key
    name and no quotation marks for the argument of a function.


To configure owl-u to check an email client i. e. Sylpheed (other email
clients are not supported) for new emails, use the following feed
configuration:
Config_feed_xmlUrl=mua://#mh/mail/(.+)
Config_feed_title=New e-mails (Sylpheed)
Config_feed_htmlUrl=
Config_feed_cacheId=mua_#mh_mail
Config_feed_singleEntry=1
Config_feed_needleRegEx=^\s*([0-9]+).+
Config_feed_replacement=$1
Config_feed_needleRegEx=^[0-9\s]+(.*)
Config_feed_replacement=$1

Additionally you may edit the HTML template and CSS file, which are saved
in the html subdirectory of the working directory. These files are used to
display the reduced articles.


==Usage==

owl-u is completely controlled with hotkeys. The available hotkeys are
listed below. For a quick start there are the following hotkeys:
- H: Display the quick help with a list of the supported hotkeys.
- Enter: Select a feed or entry in the appropriate list or display the
  summary or article of the previously selected entry.
- Q: Go to the previous view or quitting the quick help.
- CTRL+Q: Quit owl-u and save the feed status.


===Hotkeys===

**format**: <modifier><key>::<function>(<argument>)''<BR>''
**modifier**:
- ! = Alt (Mod1Mask)
- ^ = Ctrl (ControlMask)
- + = Shift (ShiftMask)
- # = LWin (Mod4Mask)


You will have to press all keys of a hotkey at the same time beginning
with the modifier for calling the associated function, e. g. "^q" means
pressing the control key and the q key (CTRL+Q) for quitting owl-u.

: BackSpace::**Gui_navigate("back")**
  Go back in the embedded Internet Explorer, if it shows an article.

: d::**Main_download()**
  Download the article(s) of the selected entry or feed (all entries).

: Enter::**Gui_navigate(+1)**
  Go to the next view (feeds -> entries -> abstract -> article).

: h::**Gui_navigate("h")**
  Show the list of supported hotkeys.

: i::**Main_importFeedList()**
  Import a feed list from an OPML file (only available in the feed list
  view or help).

: n::**Gui_showUnreadEntry(+1)**
  Show the next (in time) unread entry in the list (only available in the
  abstract or article view).

: o::**Gui_openArticle()**
  Open the article for the selected entry in a web browser.

: p::**Gui_showUnreadEntry(-1)**
  Show the previous (in time) unread entry in the list (only available in
  the abstract or article view).

: q::**Gui_navigate(-1)**
  Go to the previous view (article -> abstract -> entries -> feeds).

: r::**Main_reloadFeed()**
  Reload the selected feed (only available in the feed list view). This
  action blocks all hotkeys to prevent interference.

: u::**Main_toggleUnreadMark()**
  Toggle the unread mark ("N") for the selected entry.

: 0::**Gui_showUnreadEntry(0)**
  Show the first (in time = oldest) unread entry in the list (only
  available in the abstract or article view).

: +a::**Main_markFeedRead()**
  Mark all entries in the current feed read (only available in the entry
  list view).

: +d::**Main_toggleDeleteMark()**
  Toggle the deletion mark ("D") for the selected entry (delete the entry
  and the associated cached files).

: +h::**Run, explore %A_ScriptDir%\docs**
  Open the documentation directory with the help file in explorer.

: +r::**Main_reloadFeeds()**
  Reload all feeds (only available in the feed list view). This action
  blocks all hotkeys to prevent interference.

: ^e::**Config_editIni()**
  Edit the configuration file (Config_iniFilePath).

: ^q::**ExitApp**
  Quit owl-u from any view.

: ^r::**Reload**
  Reload owl-u. This i. a. reloads the configuration variables.

: ^u::**Gui_toggleSourceView()**
  Toggle the article view full HTML -> "regex" -> "body" -> "text" (only
  available in the article view).

: ^w::**Config_writeIni()**
  Write the configuration file (Config_iniFilePath).

''<BR>''
------------------------------------------------------------------------
%%html: (c) 2010-2011 joten, last modified %%date(%d.%m.%Y) [../images/jn.png]
%%txt: (c) 2010-2011 joten, last modified %%date(%d.%m.%Y)
